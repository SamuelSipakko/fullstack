{"version":3,"sources":["components/Filter.js","components/Button.js","components/Form.js","components/highlight.js","components/List.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","_ref","val","handle","react_default","a","createElement","value","onChange","Button","text","type","undefined","onClick","tdStyle","padding","textAlign","Form","handleAdd","name","handleName","num","handleNum","onSubmit","style","components_Button","highlight","highlightText","idx","coll","count","left","idxCheck","indx","length","key","toLowerCase","search","push","substring","backgroundColor","substr","List","list","filt","showTable","deletePerson","rows","filter","v","includes","number","map","p","i","_highlight","_highlight2","Object","slicedToArray","names","row","concat","baseUrl","services_persons","axios","get","then","res","data","newObj","post","id","delete","put","Notification","notification","successfull","className","message","App","_useState","useState","_useState2","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNum","_useState7","_useState8","filtering","setFilter","_useState9","_useState10","setShowTable","_useState11","_useState12","setNotif","newNotification","isSuccessfull","setTimeout","useEffect","personService","sort","b","localeCompare","components_Notification","components_Filter","event","target","components_Form","preventDefault","unallowed","trim","split","self","isNaN","indexOf","personWithSameNumber","find","join","window","confirm","toBeUpdated","updated","objectSpread","newOne","catch","error","response","handleUpdate","newPerson","components_List","person","ReactDom","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.51d87ec0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({val,handle}) => {\r\n    return (\r\n      <div>\r\n        filter shown with:&nbsp;&nbsp;\r\n        <input value={val} onChange={handle}/>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\nimport './button.css'\r\n\r\n\r\n\r\nconst Button = ({handle,text,type}) => {  // 'type' used to distinguish 'submit'\r\n    if(type === undefined) {              // button from other (manually-defined) buttons\r\n        return (\r\n            <button onClick={handle}>\r\n                {text}\r\n            </button>\r\n        )\r\n    }\r\n  return (\r\n    <button type={type}>\r\n        {text}\r\n    </button>\r\n  )\r\n}\r\n\r\n\r\nexport default Button","import React from 'react'\r\nimport Button from './Button.js'\r\n\r\n\r\nconst tdStyle = {\r\n    padding: '5px 10px 5px 0px',\r\n    textAlign: 'right'\r\n  }\r\n\r\n\r\nconst Form = ({handleAdd,name,handleName,num,handleNum}) => {\r\n    return (\r\n      <form onSubmit={handleAdd}>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td style={tdStyle}>name:</td>\r\n              <td style={tdStyle}><input value={name} onChange={handleName}/></td>\r\n            </tr>\r\n            <tr>\r\n              <td style={tdStyle}>number:</td>\r\n              <td style={tdStyle}><input value={num} onChange={handleNum}/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div>\r\n          <Button type='submit' text='add new' />\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Form","import React from 'react'\r\n\r\n/**\r\n * Function for highlighting all 'highlightText' matches from 'text'.\r\n * Highlights only if 'highlightText' is non-empty.\r\n * @param {string} text Text to search for highlights.\r\n * @param {string} highlightText Text to highlight.\r\n * @param {int} idx Value where list 'key'-attribute values should start from.\r\n * Should be greater or equal to 1. Following function calls are recommended to \r\n * use returned index from previos excecution. If left undefined, uses 1 as default.\r\n * @returns an array of two elements. The first is a collection of JSX\r\n * elements that include the highlited text and the second the index\r\n * where next excecution is recommended to start from,\r\n */\r\nexport const highlight = (text, highlightText, idx) => {\r\n    const coll = []\r\n    let count = idx === undefined ? 1 : idx\r\n    let left = text\r\n\r\n    const idxCheck = indx => {\r\n        if (indx === -1)\r\n            return left.length\r\n        else\r\n            return indx\r\n    }\r\n\r\n    if (highlightText === undefined || highlightText.length === 0)\r\n        return [ [<span key={count}>{text}</span>], count+1 ]\r\n\r\n    while (left.length > 0) {\r\n        const idx = left.toLowerCase().search(highlightText.toLowerCase())\r\n        coll.push(<span key={count * 2 - 1}>\r\n                    {left.substring(0, idxCheck(idx))}\r\n                  </span>)\r\n        if (idx !== -1) {\r\n            coll.push(\r\n                <span key={count * 2} style={{ backgroundColor: 'yellow' }}>\r\n                    {left.substr(idx, highlightText.length)}\r\n                </span>)\r\n        }\r\n        left = left.substring(idxCheck(idx) + highlightText.length)\r\n        count += 1\r\n    }\r\n    return [coll, count]\r\n}\r\n","import React from 'react'\r\nimport { highlight } from './highlight'\r\nimport Button from './Button';\r\n\r\n\r\nconst tdStyle = {\r\n    padding: '5px 20px 5px 0px'\r\n    }\r\n\r\n\r\nconst List = ({list,filt,showTable,deletePerson}) => {\r\n    const rows = \r\n        list.filter(v=> v.name.toLowerCase().includes(filt.toLowerCase())\r\n                        || v.number.includes(filt))\r\n            .map((p,i)=> {\r\n                if(showTable) {\r\n                    return (\r\n                      <tr key={i}>\r\n                        <td style={tdStyle}>{highlight(p.name,filt,1)[0]}</td>\r\n                        <td style={tdStyle}>{highlight(p.number,filt,1)[0]}</td>\r\n                        <td style={tdStyle}>\r\n                            <Button handle={deletePerson(p)} text='delete'/>\r\n                        </td>\r\n                      </tr>\r\n                    )\r\n                }\r\n                const [ names, idx ] = highlight(p.name,filt,3)\r\n                const row = names.concat(<span key='0'>&nbsp;&nbsp;&nbsp;&nbsp;</span>)\r\n                                 .concat(highlight(p.number,filt,idx)[0])\r\n                                 .concat(<span key='1'>&nbsp;&nbsp;&nbsp;&nbsp;</span>)\r\n                                 .concat(<Button key={2} handle={deletePerson(p)} text='delete'/>)\r\n                return <tr key={i*2-1}>\r\n                          <td key={i*2} style={tdStyle}>{row}</td>\r\n                       </tr>\r\n            })\r\n    return <table><tbody>{rows}</tbody></table>\r\n}\r\n\r\nexport default List","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\n\r\nconst getAll = () => axios.get(baseUrl)\r\n                          .then(res => res.data)\r\n\r\nconst create = newObj => axios.post(baseUrl, newObj)\r\n                              .then(res => res.data)\r\n\r\nconst update = (id,newObj) => axios.put(`${baseUrl}/${id}`, newObj)\r\n                                   .then(res => res.data)\r\n\r\nconst del = id => axios.delete(`${baseUrl}/${id}`)\r\n\r\n\r\nexport default { getAll, create, del, update }","import React from 'react'\r\nimport './notification.css'\r\n\r\n\r\nconst Notification = ({ notification }) => {\r\n    if (notification == null)\r\n        return null\r\n\r\n    if (notification.successfull)\r\n        return (\r\n            <div className='success'>\r\n                {notification.message}\r\n            </div>\r\n        )\r\n\r\n    return (\r\n        <div className='error'>\r\n            {notification.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport Form from './components/Form'\r\nimport List from './components/List'\r\nimport Button from './components/Button';\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification';\r\n\r\n\r\nconst App = () => {\r\n    const [ persons, setPersons] = useState([]) \r\n  \r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNum ] = useState('')\r\n    const [ filtering, setFilter ] = useState('')\r\n    const [ showTable, setShowTable ] = useState(true)\r\n    const [ notification, setNotif ] = useState(null)\r\n  \r\n\r\n\r\n    const newNotification = (text,isSuccessfull) => {\r\n        setNotif({ message: text, successfull: isSuccessfull })\r\n        setTimeout(() => setNotif(null), 7000);\r\n    }\r\n\r\n\r\n    const handleAdd = () => {\r\n        personService\r\n            .create({name: newName.trim(), number: newNumber.trim()})\r\n            .then(newPerson => {\r\n                setPersons(persons.concat(newPerson).sort((a,b)=> a.name.localeCompare(b.name)))\r\n                newNotification(`Added ${newName}`, true)\r\n                setNewName('')\r\n                setNewNum('')\r\n            })\r\n            .catch(error => {\r\n                personService.getAll().then(persons => {\r\n                    setPersons(persons.sort((a,b)=> a.name.localeCompare(b.name)))\r\n                })\r\n                newNotification(error.response.data.error, false)\r\n            })\r\n    }\r\n\r\n\r\n    const handleUpdate = () => {\r\n        const toBeUpdated = persons.find(p => p.name === newName.trim())\r\n        const updated = { ...toBeUpdated, number: newNumber.trim()}\r\n        personService\r\n            .update(updated.id, updated)\r\n            .then(newOne => {\r\n                setPersons(persons.map(p => p.id !== updated.id ? p : newOne))\r\n                newNotification(`Changed the number of ${newName} to ${newNumber}`, true)\r\n                setNewName('')\r\n                setNewNum('')\r\n            })\r\n            .catch(error => {\r\n                personService.getAll().then(persons => {\r\n                    setPersons(persons.sort((a,b)=> a.name.localeCompare(b.name)))\r\n                })\r\n                newNotification(error.response.data.error, false)\r\n            })\r\n    }\r\n    \r\n\r\n    const deletePerson = person => () => {\r\n        const res = window.confirm(`Are you sure you want to delete '${person.name}'?`)\r\n        if (res) {\r\n            personService\r\n                .del(person.id)\r\n                .then(() => {\r\n                    setPersons(persons.filter(p => p !== person))\r\n                    newNotification(`Deleted ${person.name}`, true)\r\n                })\r\n                .catch(() => {\r\n                    setPersons(persons.filter(p => p !== person))\r\n                    newNotification(`${person.name} has already been removed from server`, false)\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    const addNumber = (event) => {\r\n        event.preventDefault()\r\n        function numFilter(num, idx, self) {\r\n            return isNaN(num) && num!=='-' && self.indexOf(num) === idx\r\n        }\r\n\r\n        const unallowed = newNumber.trim().split('').filter(numFilter).sort()\r\n        const personWithSameNumber = persons.find(p=> p.number === newNumber.trim())\r\n\r\n        if (newName.length === 0)\r\n            newNotification('No name given', false)\r\n\r\n        else if (newNumber.length === 0)\r\n            newNotification('No number given', false)\r\n\r\n        else if (unallowed.length !== 0)\r\n            newNotification(`number includes unaccepted characters: '${unallowed.join(', ')}'`, false)\r\n        \r\n        else if (persons.filter(p => p.name === newName.trim()).length !== 0) {\r\n            if (personWithSameNumber !== undefined) {\r\n                if (personWithSameNumber.name === newName.trim())\r\n                    newNotification('A contact already exists with given data.', false)\r\n                else \r\n                    newNotification(`Given phonenumber has already been registered for ${personWithSameNumber.name}`, false)\r\n            }\r\n            else {\r\n                const res = window.confirm(`${newName} has already been added to the phonebook.` +\r\n                                            ' Do you want to replace the old number with a new one?')\r\n                if (res) \r\n                    handleUpdate()\r\n            }\r\n        }\r\n\r\n        else if (personWithSameNumber !== undefined)\r\n            newNotification(`Given phonenumber has already been registered for ${personWithSameNumber.name}`, false)\r\n\r\n        else \r\n            handleAdd()\r\n    }\r\n    \r\n\r\n    const handleName = event => setNewName(event.target.value)\r\n  \r\n    const handleNum = event => setNewNum(event.target.value)\r\n  \r\n    const handleFilter = event => setFilter(event.target.value)\r\n  \r\n    const handleTable = () => setShowTable(!showTable)\r\n  \r\n\r\n  \r\n    useEffect(() => {\r\n        personService\r\n            .getAll()\r\n            .then(persons => setPersons(persons.sort((a,b)=> a.name.localeCompare(b.name))) )\r\n    }, [])\r\n  \r\n  \r\n    return (\r\n      <div>\r\n        <Notification notification={notification} />\r\n        <h2>Phonebook</h2>\r\n        <Filter val={filtering} handle={handleFilter} />\r\n        <h2>Add a new contact</h2>\r\n        <Form handleAdd={addNumber}\r\n              name={newName}\r\n              handleName={handleName}\r\n              num={newNumber}\r\n              handleNum={handleNum} />\r\n        <h2>Numbers &nbsp;&nbsp;&nbsp;\r\n          <Button handle={handleTable} \r\n                  text={'show ' + (showTable ? 'linearly' : 'in table')} />\r\n        </h2>\r\n        <List list={persons}\r\n              filt={filtering} \r\n              showTable={showTable}\r\n              deletePerson={deletePerson} />\r\n      </div>\r\n    )\r\n  \r\n  }\r\n\r\n\r\n  export default App","import ReactDom from 'react-dom'\r\nimport React from 'react'\r\nimport App from './App'\r\n\r\n\r\nReactDom.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}